{"version":3,"sources":["webpack:///./apiService.js","webpack:///./index.js"],"names":["getImageList","searchText","currentPage","arrLength","addImageData","fetch","REQUEST_URL","then","data","json","imageData","hits","defaults","width","delay","destroy","defaultModules","set","PNotifyMobile","_","require","dataList","gallery","document","getElementById","templateGallery","innerHTML","trim","template","Handlebars","compile","searchImage","divContainer","loadButton","length","classList","add","error","push","greatGallery","info","remove","addEventListener","debounce","text","target","value","splice","getImageData","e","localName","basicLightbox","dataset","bigsrc","show","id"],"mappings":"qLAGe,SAASA,EACtBC,EACAC,EACAC,EACAC,GAEAC,MACKC,sEAAyDL,EADzD,SAC4EC,EAD5E,aACoGC,EADpG,2CAGFI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAS,OAAIN,EAAaM,EAAUC,S,wECG9CC,WAASC,MAAQ,QACjBD,WAASE,MAAQ,OACjBF,WAASG,QAAU,QACnBC,iBAAeC,IAAIC,EAAe,IAGlC,IAKIjB,EALEkB,EAAIC,EAAQ,QAGdlB,EAAc,EACZmB,EAAW,GAIXC,EAAUC,SAASC,eAAe,WAClCC,EAAkBF,SACrBC,eAAe,mBACfE,UAAUC,OACPC,EAAWC,WAAWC,QAAQL,GAG9BM,EAAcR,SAASC,eAAe,eACtCQ,EAAeT,SAASC,eAAe,gBACvCS,EAAaV,SAASC,eAAe,cAyB3C,SAASpB,EAAaM,GACpB,GAAyB,IAArBA,EAAUwB,OAEZ,OADAD,EAAWE,UAAUC,IAAI,QAClBC,gBAAM,mBAEfhB,EAASiB,KAAT,MAAAjB,EAAiBX,GACjB,IAAM6B,EAAeX,EAASP,GAK9B,OAJAmB,eACE,kFAEFP,EAAWE,UAAUM,OAAO,QACpBnB,EAAQI,UAAYa,EAjC9BR,EAAYW,iBAAiB,QAASvB,EAAEwB,UAGxC,SAAuBC,GACrB3C,EAAa2C,EAAKC,OAAOC,MACzBzB,EAAS0B,OAAO,EAAG1B,EAASa,QAE5Bc,EAAa/C,EADbC,EAAc,EACwB,GAAIE,KAPoB,MAChE4B,EAAaU,iBAAiB,SAS9B,SAAkBO,GACW,QAAvBA,EAAEJ,OAAOK,YACXC,SAAA,aAAkCF,EAAEJ,OAAOO,QAAQC,OAAnD,MAA+DC,OAC/Dd,eAAK,2BAEP,GAAoB,eAAhBS,EAAEJ,OAAOU,GACX,OAGFP,EAAa/C,EADbC,GAAe,EACuB,GAAIE,Q","file":"main.bb14127fdf5622d844cb.js","sourcesContent":["const REQUEST_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '16131668-a6b5f889764d48a111b29e31c';\r\n\r\nexport default function getImageList(\r\n  searchText,\r\n  currentPage,\r\n  arrLength,\r\n  addImageData,\r\n) {\r\n  fetch(\r\n    `${REQUEST_URL}?image_type=photo&orientation=horizontal&q=${searchText}&page=${currentPage}&per_page=${arrLength}&key=${API_KEY}`,\r\n  )\r\n    .then(data => data.json())\r\n    .then(imageData => addImageData(imageData.hits));\r\n}\r\n","import './styles.css';\nimport '../node_modules/basiclightbox/dist/basicLightbox.min.css';\n\n// import fetch API\nimport getImageData from './apiService.js';\n\n// import basiclightbox\nimport * as basicLightbox from '../node_modules/basiclightbox/dist/basicLightbox.min.js';\n\n// PNotify\nimport { info, error, defaultModules } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport * as PNotifyMobile from '@pnotify/mobile';\nimport '@pnotify/mobile/dist/PNotifyMobile.css';\nimport { defaults } from '@pnotify/core';\ndefaults.width = '500px';\ndefaults.delay = '2000';\ndefaults.destroy = 'false';\ndefaultModules.set(PNotifyMobile, {});\n\n// lodash\nconst _ = require('lodash');\n\n// variables\nlet currentPage = 0;\nconst dataList = [];\nlet searchText;\n\n// Handlebars\nconst gallery = document.getElementById('gallery');\nconst templateGallery = document\n  .getElementById('templateGallery')\n  .innerHTML.trim();\nconst template = Handlebars.compile(templateGallery);\n\n// load DOM element\nconst searchImage = document.getElementById('search-form');\nconst divContainer = document.getElementById('divContainer');\nconst loadButton = document.getElementById('loadButton');\n\n// Listener\nsearchImage.addEventListener('input', _.debounce(getSearchText, 500));\ndivContainer.addEventListener('click', loadMore);\n\nfunction getSearchText(text) {\n  searchText = text.target.value;\n  dataList.splice(0, dataList.length);\n  currentPage = 1;\n  getImageData(searchText, currentPage, 12, addImageData);\n}\n\nfunction loadMore(e) {\n  if (e.target.localName === 'img') {\n    basicLightbox.create(`<img src=\"${e.target.dataset.bigsrc}\">`).show();\n    info('Click on image to exit');\n  }\n  if (e.target.id !== 'loadButton') {\n    return;\n  }\n  currentPage += 1;\n  getImageData(searchText, currentPage, 12, addImageData);\n}\n\nfunction addImageData(imageData) {\n  if (imageData.length === 0) {\n    loadButton.classList.add('hide');\n    return error('Image not found');\n  }\n  dataList.push(...imageData);\n  const greatGallery = template(dataList);\n  info(\n    'Click button load more for load more images or click on image to see big image',\n  );\n  loadButton.classList.remove('hide');\n  return (gallery.innerHTML = greatGallery);\n}\n"],"sourceRoot":""}